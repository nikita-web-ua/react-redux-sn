{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Dialog/Dialog.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx"],"names":["module","exports","Dialog","props","className","s","dialog","src","img","to","id","name","Message","message","maxLength100","maxLengthCreator","SendMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","el","messagesElements","messages","mas","dialogsItems","textInput","formData","sendMessage","newMessageText","compose","connect","actions","withAuthRedirect"],"mappings":"6FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,IAAM,qBAAqB,UAAY,6B,sFCmBnOC,EAXqB,SAACC,GACjC,OACI,sBAAKC,UAAWC,IAAEC,OAAlB,UACI,qBAAKC,IAAKJ,EAAMK,MAChB,cAAC,IAAD,CAASC,GAAI,YAAcN,EAAMO,GAAjC,SAAsCP,EAAMQ,WCCzCC,EARsB,SAACT,GAClC,OACI,8BACI,sBAAKC,UAAWC,IAAEQ,QAAlB,cAA6BV,EAAMU,QAAnC,U,yCC+BRC,EAAeC,YAAiB,KAgBhCC,EAAuBC,YAA6D,CAACC,KAAM,gBAApED,EATuG,SAACd,GAC/H,OACI,uBAAMgB,SAAUhB,EAAMiB,aAAtB,UACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAWC,YAAa,8BAAgCb,KAAM,iBAAkBc,SAAU,CAACC,IAAUZ,KACvH,gDAOGa,EA5CsB,SAACxB,GAElC,IAAIyB,EAAQzB,EAAM0B,YACdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAE,OAAI,cAAC,EAAD,CAAQtB,KAAMsB,EAAGtB,KAAMD,GAAIuB,EAAGvB,GAAIF,IAAKyB,EAAGzB,KAAUyB,EAAGvB,OACjGwB,EAAmBN,EAAMO,SAASH,KAAI,SAAAI,GAAG,OAAI,cAAC,EAAD,CAASvB,QAASuB,EAAIvB,SAAcuB,EAAI1B,OAMzF,OACI,sBAAKN,UAAWC,IAAE0B,QAAlB,UACI,qBAAK3B,UAAWC,IAAEgC,aAAlB,SACKP,IAEL,sBAAK1B,UAAWC,IAAE8B,SAAlB,UACI,8BAAMD,IACN,qBAAK9B,UAAWC,IAAEiC,UAAlB,SACI,cAACtB,EAAD,CAAsBG,SAZjB,SAACoB,GAClBpC,EAAMqC,YAAYD,EAASE,4B,yBCPpBC,sBACXC,aAPkB,SAACf,GACnB,MAAO,CACHC,YAAaD,EAAMC,eAKE,CAACW,YAAaI,IAAQJ,cAC/CK,IAFWH,CAGbf","file":"static/js/4.a6a132cf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogsItems\":\"Dialogs_dialogsItems__2sNe2\",\"dialog\":\"Dialogs_dialog__lk_cw\",\"messages\":\"Dialogs_messages__1w_Up\",\"message\":\"Dialogs_message__1xIDh\",\"one\":\"Dialogs_one__1CUpu\",\"textInput\":\"Dialogs_textInput__iJZIq\"};","import s from \"../Dialogs.module.css\";\nimport {NavLink} from \"react-router-dom\";\n\ntype PropsType = {\n    img: string,\n    id: number,\n    name: string\n}\n\nconst Dialog: React.FC<PropsType> = (props) => {\n    return(\n        <div className={s.dialog}>\n            <img src={props.img}/>\n            <NavLink to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\n        </div>\n    );\n}\n\n\n\nexport default Dialog;","import s from \"../Dialogs.module.css\";\n\ntype PropsType = {\n    message: string\n}\n\nconst Message: React.FC<PropsType> = (props) => {\n    return (\n        <div>\n            <div className={s.message}> {props.message} </div>\n        </div>\n    );\n}\n\nexport default Message;","import s from \"./Dialogs.module.css\"\nimport Dialog from \"./Dialog/Dialog\";\nimport Message from \"./Message/Message\";\nimport React from 'react';\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\nimport {initialStateType} from \"../../redux/dialogs-reducer\";\n\ntype PropsType = {\n    dialogsPage: initialStateType,\n    sendMessage: (messageText: string) => void\n}\n\nconst Dialogs: React.FC<PropsType> = (props) => {\n\n    let state = props.dialogsPage\n    let dialogsElements = state.dialogs.map(el => <Dialog name={el.name} id={el.id} img={el.img} key={el.id}/>)\n    let messagesElements = state.messages.map(mas => <Message message={mas.message} key={mas.id}/>)\n\n    let sendNewMessage = (formData: {newMessageText: string}) => {\n        props.sendMessage(formData.newMessageText)\n    }\n\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogsItems}>\n                {dialogsElements}\n            </div>\n            <div className={s.messages}>\n                <div>{messagesElements}</div>\n                <div className={s.textInput}>\n                    <SendMessageReduxForm onSubmit={sendNewMessage}/>\n                </div>\n            </div>\n\n        </div>\n    );\n}\n\nlet maxLength100 = maxLengthCreator(100)\n\ntype NewMessageFormValuesType = {\n    newMessageText: string\n}\ntype DialogsFormOwnPropsType = {}\n\nconst SendMessageForm: React.FC<InjectedFormProps<NewMessageFormValuesType, DialogsFormOwnPropsType> & DialogsFormOwnPropsType> = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <Field component={Textarea}  placeholder={\"Write your message here... \"}  name={'newMessageText'} validate={[required, maxLength100]}/>\n            <button>Send</button>\n        </form>\n    )\n}\n\nlet SendMessageReduxForm = reduxForm<NewMessageFormValuesType, DialogsFormOwnPropsType>({form: 'writeMessage'})(SendMessageForm)\n\nexport default Dialogs;\n\n","import React from 'react';\nimport {actions} from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from 'react-redux'\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\nimport {AppStateType} from \"../../redux/redux-store\";\n\nlet mapStateToProps = (state: AppStateType) =>{\n    return {\n        dialogsPage: state.dialogsPage\n    }\n}\n\nexport default compose<React.ComponentType>(\n    connect(mapStateToProps, {sendMessage: actions.sendMessage}),\n    withAuthRedirect\n)(Dialogs)\n"],"sourceRoot":""}